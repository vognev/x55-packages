diff --git a/arch/arm/dts/rk3568-evb.dts b/arch/arm/dts/rk3568-evb.dts
index 614736a019..34d4e41e7b 100644
--- a/arch/arm/dts/rk3568-evb.dts
+++ b/arch/arm/dts/rk3568-evb.dts
@@ -28,6 +28,31 @@
 			press-threshold-microvolt = <9>;
 		};
 	};
+	leds: gpio-leds {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 =<&leds_gpio>;
+
+		led@1 {
+		        gpios = <&gpio0 RK_PC5 GPIO_ACTIVE_HIGH>;
+		        label = "battery_full";
+		        default-state="on";
+		        retain-state-suspended;
+		};
+
+		led@2 {
+		        gpios = <&gpio0 RK_PC6 GPIO_ACTIVE_HIGH>;
+		        label = "battery_charging";
+		        retain-state-suspended;
+		};
+
+		led@3 {
+		        gpios = <&gpio0 RK_PC7 GPIO_ACTIVE_HIGH>;
+		        label = "low_power";
+			default-state="off";
+		        retain-state-suspended;
+		};
+	};
 };
 
 &gmac0 {
@@ -104,3 +129,14 @@
 &uart2 {
 	status = "okay";
 };
+
+&pinctrl {
+        gpio-leds {
+		leds_gpio: leds-gpio {
+			rockchip,pins =
+				<0 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>,
+				<0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>,
+				<0 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+};
diff --git a/arch/arm/mach-rockchip/decode_bl31.py b/arch/arm/mach-rockchip/decode_bl31.py
index 301bd15375..37c7306661 100755
--- a/arch/arm/mach-rockchip/decode_bl31.py
+++ b/arch/arm/mach-rockchip/decode_bl31.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python2
+#!/usr/bin/env python
 #
 # Copyright (C) 2020 Rockchip Electronics Co., Ltd
 #
diff --git a/configs/rk3568_defconfig b/configs/rk3568_defconfig
index d157307403..3ff33c0884 100644
--- a/configs/rk3568_defconfig
+++ b/configs/rk3568_defconfig
@@ -31,7 +31,9 @@ CONFIG_BOOTDELAY=0
 CONFIG_SYS_CONSOLE_INFO_QUIET=y
 # CONFIG_DISPLAY_CPUINFO is not set
 CONFIG_ANDROID_BOOTLOADER=y
+CONFIG_ANDROID_WRITE_KEYBOX=y
 CONFIG_ANDROID_AVB=y
+CONFIG_ANDROID_KEYMASTER_CA=y
 CONFIG_ANDROID_BOOT_IMAGE_HASH=y
 CONFIG_SPL_BOARD_INIT=y
 # CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
@@ -221,4 +223,6 @@ CONFIG_AVB_LIBAVB_USER=y
 CONFIG_RK_AVB_LIBAVB_USER=y
 CONFIG_OPTEE_CLIENT=y
 CONFIG_OPTEE_V2=y
+CONFIG_LED=y
+CONFIG_LED_GPIO=y
 CONFIG_OPTEE_ALWAYS_USE_SECURITY_PARTITION=y
diff --git a/drivers/video/drm/rockchip_display.c b/drivers/video/drm/rockchip_display.c
index d95d77baee..7b34454d6b 100644
--- a/drivers/video/drm/rockchip_display.c
+++ b/drivers/video/drm/rockchip_display.c
@@ -1737,6 +1737,7 @@ static int rockchip_display_fixup_dts(void *blob)
 }
 #endif
 
+#define __HDMI__
 static int rockchip_display_probe(struct udevice *dev)
 {
 	struct video_priv *uc_priv = dev_get_uclass_priv(dev);
@@ -1774,7 +1775,30 @@ static int rockchip_display_probe(struct udevice *dev)
 	if (!ofnode_valid(route_node))
 		return -ENODEV;
 
+	#ifdef __HDMI__
+	int i=0;
+	#endif
+
 	ofnode_for_each_subnode(node, route_node) {
+		#ifdef __HDMI__
+		int hdmi_status=readl(0xfe0ac010) & 0x02 ? 1 : 0;
+		if(hdmi_status==1)
+		{
+			if(i==0)
+			{
+				continue;
+			}
+		}
+		else
+		{
+			if(i==3)
+			{
+				continue;
+			}
+		}
+		i++;
+		#endif
+
 		if (!ofnode_is_available(node))
 			continue;
 		phandle = ofnode_read_u32_default(node, "connect", -1);
diff --git a/drivers/video/drm/rockchip_panel.c b/drivers/video/drm/rockchip_panel.c
index 9ddb4d8196..d2cac18259 100644
--- a/drivers/video/drm/rockchip_panel.c
+++ b/drivers/video/drm/rockchip_panel.c
@@ -131,7 +131,7 @@ static int rockchip_panel_parse_cmds(const u8 *data, int length,
 
 	return 0;
 }
-
+/*
 static void rockchip_panel_write_spi_cmds(struct rockchip_panel_priv *priv,
 					  u8 type, int value)
 {
@@ -159,6 +159,84 @@ static void rockchip_panel_write_spi_cmds(struct rockchip_panel_priv *priv,
 
 	dm_gpio_set_value(&priv->spi_cs_gpio, 1);
 }
+*/
+
+int cmd_init_code[30][32]={
+	{0x0A1,0x100,0x100,0x100,0x100,0x100,0x100},
+	{0x2C8},
+	{0x0F0,0x15A,0x15A},
+	{0x0F1,0x15A,0x15A},
+	{0x0B0,0x102},
+	{0x0F3,0x13B},
+	{0x0F4,0x133,0x142,0x100,0x108},
+	{0x0F5,0x100,0x106,0x126,0x135,0x103},
+	{0x0F6,0x102},
+	{0x0C6,0x10B,0x100,0x100,0x13C,0x100,0x122,0x100,0x100,0x100,0x100},
+	{0x0F7,0x120},
+	{0x0F5,0x100,0x106,0x127,0x135,0x103},
+	{0x0B2,0x106,0x106,0x106,0x106},
+	{0x0B1,0x107,0x100,0x110},
+	{0x4F8,0x17F,0x17A,0x189,0x167,0x126,0x138,0x100,0x100,0x109,0x167,0x170,0x188,0x17A,0x176,0x105,0x109,0x123,0x123,0x123},
+	{0x011},
+	{0x2C8},
+	{0x029},
+	{0x2C8},
+	{0x4B5,0x1FF,0x1EF,0x135,0x142,0x10D,0x1D7,0x1FF,0x107,0x1FF,0x1FF,0x1FD,0x100,0x101,0x1FF,0x105,0x112,0x10F,0x1FF,0x1FF,0x1FF,0x1FF},
+	{0x0B4,0x115},
+	{0x0B3,0x100},
+	{0x4F9,0x101,0x19F,0x19F,0x1BE,0x1CF,0x1D7,0x1C9,0x1C2,0x1CB,0x1BB,0x1E1,0x1E3,0x1DE,0x1D6,0x1D0,0x1D3,0x1FA,0x1ED,0x1E6,0x12F,0x100,0x12F},
+	{0x0F9,0x100},
+	{0x026,0x100},
+	{0x0B2,0x112},
+	{0x011},
+	{0x2C8},
+	{0x029},
+	{0x2C8},
+};
+
+static void rockchip_panel_write_spi_cmds_buffer(struct rockchip_panel_priv *priv)
+{
+	int i,m,n;
+	int value,value_hl;
+
+	mdelay(150);
+
+	for (m = 0; m < 30; m++) {
+		dm_gpio_set_value(&priv->spi_cs_gpio, 0);
+
+		if(cmd_init_code[m][0]& 0x400){
+			value_hl=32;
+		} else {
+			value_hl=16;
+		}
+
+		for (n = 0; n < value_hl; n++) {
+			value = cmd_init_code[m][n];
+			if (value & 0x200)
+			{
+				mdelay(value & 0xFF);
+				break;
+			};
+
+			for (i = 0; i < 9; i++) {
+				if (value & 0x100)
+					dm_gpio_set_value(&priv->spi_sdi_gpio, 1);
+				else
+					dm_gpio_set_value(&priv->spi_sdi_gpio, 0);
+
+				dm_gpio_set_value(&priv->spi_scl_gpio, 0);
+				udelay(10);
+				dm_gpio_set_value(&priv->spi_scl_gpio, 1);
+				value <<= 1;
+				udelay(10);
+			}
+		}
+
+		dm_gpio_set_value(&priv->spi_cs_gpio, 1);
+		mdelay(1);
+	}
+	mdelay(150);
+}
 
 static int rockchip_panel_send_mcu_cmds(struct rockchip_panel *panel, struct display_state *state,
 					struct rockchip_panel_cmds *cmds)
@@ -188,7 +266,6 @@ static int rockchip_panel_send_spi_cmds(struct rockchip_panel *panel, struct dis
 					struct rockchip_panel_cmds *cmds)
 {
 	struct rockchip_panel_priv *priv = dev_get_priv(panel->dev);
-	int i;
 	int ret;
 
 	if (!cmds)
@@ -202,32 +279,7 @@ static int rockchip_panel_send_spi_cmds(struct rockchip_panel *panel, struct dis
 		}
 	}
 
-	for (i = 0; i < cmds->cmd_cnt; i++) {
-		struct rockchip_cmd_desc *desc = &cmds->cmds[i];
-		int value = 0;
-		u16 mask = 0;
-		u16 data = 0;
-
-		if (priv->spi_slave) {
-			mask = desc->header.data_type ? 0x100 : 0;
-			data = (mask | desc->payload[0]) << 7;;
-			data = ((data & 0xff) << 8) | (data >> 8);
-			value = mask | desc->payload[0];
-			ret = spi_xfer(priv->spi_slave, 9, &data, NULL, SPI_XFER_ONCE);
-			if (ret)
-				printf("%s: Failed to xfer spi cmd 0x%x: %d\n",
-				       __func__, desc->payload[0], ret);
-		} else {
-			if (desc->header.payload_length == 2)
-				value = (desc->payload[0] << 8) | desc->payload[1];
-			else
-				value = desc->payload[0];
-			rockchip_panel_write_spi_cmds(priv, desc->header.data_type, value);
-		}
-
-		if (desc->header.delay_ms)
-			mdelay(desc->header.delay_ms);
-	}
+	rockchip_panel_write_spi_cmds_buffer(priv);
 
 	if (priv->spi_slave)
 		spi_release_bus(priv->spi_slave);
@@ -305,8 +357,8 @@ static void panel_simple_prepare(struct rockchip_panel *panel)
 	if (priv->power_supply)
 		regulator_set_enable(priv->power_supply, !plat->power_invert);
 
-	if (dm_gpio_is_valid(&priv->enable_gpio))
-		dm_gpio_set_value(&priv->enable_gpio, 1);
+	dm_gpio_set_value(&priv->enable_gpio, 1);
+	mdelay(50);
 
 	if (plat->delay.prepare)
 		mdelay(plat->delay.prepare);
diff --git a/include/configs/rk3568_common.h b/include/configs/rk3568_common.h
index 7a9d53bc9c..12ed29fe61 100644
--- a/include/configs/rk3568_common.h
+++ b/include/configs/rk3568_common.h
@@ -85,6 +85,20 @@
 
 #include <config_distro_bootcmd.h>
 
+#ifdef __ANBERNIC_BOOT__
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	ENV_MEM_LAYOUT_SETTINGS \
+	"partitions=" PARTS_DEFAULT \
+	ROCKCHIP_DEVICE_SETTINGS \
+	RKIMG_DET_BOOTDEV \
+	BOOTENV
+
+#undef RKIMG_BOOTCOMMAND
+#define RKIMG_BOOTCOMMAND \
+	"boot_fit;" \
+	"boot_android ${devtype} ${devnum};" \
+	"setenv distro_bootpart 3&&run distro_bootcmd;"
+#else
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	ENV_MEM_LAYOUT_SETTINGS \
 	"partitions=" PARTS_RKIMG \
@@ -92,6 +106,7 @@
 	RKIMG_DET_BOOTDEV \
 	BOOTENV
 #endif
+#endif
 
 /* rockchip ohci host driver */
 #define CONFIG_USB_OHCI_NEW
diff --git a/include/configs/rockchip-common.h b/include/configs/rockchip-common.h
index 002dcd60c2..8f514032af 100644
--- a/include/configs/rockchip-common.h
+++ b/include/configs/rockchip-common.h
@@ -8,6 +8,7 @@
 #define _ROCKCHIP_COMMON_H_
 #include <linux/sizes.h>
 
+#define __ANBERNIC_BOOT__
 #define COUNTER_FREQUENCY               24000000
 
 #if CONFIG_IS_ENABLED(TINY_FRAMEWORK) && !defined(CONFIG_ARM64)
@@ -113,6 +114,14 @@
 #else
 #define ROOT_UUID "69DAD710-2CE4-4E3C-B16C-21A1D49ABED3;\0"
 #endif
+
+#ifdef __ANBERNIC_BOOT__
+#define PARTS_DEFAULT \
+	"uuid_disk=${uuid_gpt_disk};" \
+	"name=uboot,start=8MB,size=4MB,uuid=${uuid_gpt_loader2};" \
+	"name=resource,start=12MB,size=4MB,uuid=${uuid_gpt_resource};" \
+	"name=ANBERNIC,start=16MB,size=3072M,bootable,uuid=${uuid_gpt_boot};\0"
+#else
 #define PARTS_DEFAULT \
 	"uuid_disk=${uuid_gpt_disk};" \
 	"name=loader1,start=32K,size=4000K,uuid=${uuid_gpt_loader1};" \
@@ -120,6 +129,7 @@
 	"name=trust,size=4M,uuid=${uuid_gpt_atf};" \
 	"name=boot,size=112M,bootable,uuid=${uuid_gpt_boot};" \
 	"name=rootfs,size=-,uuid="ROOT_UUID
+#endif
 
 #define PARTS_RKIMG \
 	"uuid_disk=${uuid_gpt_disk};" \
